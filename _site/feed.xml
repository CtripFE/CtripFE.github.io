<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ELSE</title>
    <description>坐标上海，专注前端，基于Node全栈开发，欢迎加入我们.
</description>
    <link>http://else.vip//</link>
    <atom:link href="http://else.vip//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 14 Nov 2017 14:52:35 +0800</pubDate>
    <lastBuildDate>Tue, 14 Nov 2017 14:52:35 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>ELSE 技术周刊(2017.11.13期)</title>
        <description>&lt;h2 id=&quot;团队分享&quot;&gt;团队分享&lt;/h2&gt;

&lt;h4 id=&quot;魔幻语言-javascript-系列之-callbind-以及上下文&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30902765&quot; target=&quot;_blank&quot;&gt;魔幻语言 JavaScript 系列之 call、bind 以及上下文&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;从一行代码来看看 JavaScript 是一门多么魔幻的语言，顺便谈谈 JavaScript 中的 call、apply 和 bind 以及上下文。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;preact一个备胎的自我修养&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30796007&quot; target=&quot;_blank&quot;&gt;Preact：一个备胎的自我修养&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文着重作者介绍了Preact的工作流程以及其中各个模块的一些工作细节，对于不熟悉 Preact 同学来说是个很好的入门篇， 对于Preact的工作流程和 主要功能模块都有自己的详细解说， 也可以和React 对比学习。&lt;/p&gt;

&lt;h4 id=&quot;面向未来的前端数据流框架---dob&quot;&gt;&lt;a href=&quot;https://github.com/ascoders/blog/issues/22&quot; target=&quot;_blank&quot;&gt;面向未来的前端数据流框架 - dob&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在前端数据流框架， dob 利用 proxy 实现的数据依赖追踪工具， 主要核心思想大量借鉴于 mobx,  但是从实现原理、使用便捷性，以及调试工具都做了大量优化， 可以利用 dob-react 与 react 结合使用，也深受大家喜爱。&lt;/p&gt;

&lt;h4 id=&quot;webpack-hmr-原理解析&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30669007&quot; target=&quot;_blank&quot;&gt;Webpack HMR 原理解析&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Hot Module Replacement（以下简称 HMR）是 webpack 发展至今引入的最令人兴奋的特性之一 ，当你对代码进行修改并保存后，webpack 将对代码重新打包，并将新的模块发送到浏览器端，浏览器通过新的模块替换老的模块，这样在不刷新浏览器的前提下就能够对应用进行更新。&lt;/p&gt;

&lt;h4 id=&quot;使用-css-houdini-绘制平滑圆角&quot;&gt;&lt;a href=&quot;https://jhuang.me/2017/11/07/%E4%BD%BF%E7%94%A8-CSS-Houdini-%E7%BB%98%E5%88%B6%E5%B9%B3%E6%BB%91%E5%9C%86%E8%A7%92/&quot; target=&quot;_blank&quot;&gt;使用 CSS Houdini 绘制平滑圆角&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Houdini API 定义了一种新的在浏览器的渲染阶段往 CSS 图像中添加内容的方式。简单地说，浏览器给我们提供了用程序绘制一个 CSS 图像并用作背景的能力。因此，我们应该可以很简单地绘制一个超椭圆。&lt;/p&gt;

&lt;h4 id=&quot;利用-javascript-实现富文本编辑器&quot;&gt;&lt;a href=&quot;http://eux.baidu.com/blog/2017/11/%E5%88%A9%E7%94%A8-javascript-%E5%AE%9E%E7%8E%B0%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8&quot; target=&quot;_blank&quot;&gt;利用 JavaScript 实现富文本编辑器&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;如何从零开始打造一个基本的富文本编辑器，或许许多 API 你曾见过，但一直到某个特定场景下，才发现是多么有用。&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;web请求处理二nginx请求反向代理&quot;&gt;&lt;a href=&quot;http://www.jianshu.com/p/bed000e1830b&quot; target=&quot;_blank&quot;&gt;WEB请求处理二：Nginx请求反向代理&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文章阐述了请求到达反向代理服务器的整个处理过程， 包括反向代理的原理，工作流程，以及Nginx常用配置详细解析。&lt;/p&gt;

&lt;h4 id=&quot;腾讯qq空间超分辨率技术tsr为用户节省34流量处理效果和速度超谷歌raisr&quot;&gt;&lt;a href=&quot;https://www.leiphone.com/news/201710/c0GICjRacVyzHKIM.html&quot; target=&quot;_blank&quot;&gt;腾讯QQ空间超分辨率技术TSR：为用户节省3/4流量，处理效果和速度超谷歌RAISR&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;TSR技术在RAISR的标准下，处理速度在提升了40%，处理效果也有明显提升。此外，TSR也是业界首次实现移动端使用深度神经网络进行超分辨率，并保证图片能够实时进行处理。即使在用户的普通Andriod手机，也可以使用这项技术。&lt;/p&gt;

&lt;h4 id=&quot;graphql-初探面向未来-api-及其生态圈&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30701842?group_id=911936474128961536&quot; target=&quot;_blank&quot;&gt;GraphQL 初探—面向未来 API 及其生态圈&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;GraphQL 作为一个新的 API 标准，通过声明式的数据获取方式，给客户端提供了简洁、灵活、高效的数据查询。适应了移动互联网时代客户端技术的快速发展和需求的快速迭代，是当前 REST 模式的有力竞争者。&lt;/p&gt;

&lt;h4 id=&quot;决战双11亿级访问量的web前端页面优化技巧&quot;&gt;&lt;a href=&quot;https://www.toutiao.com/a6486787524172710414/?tt_from=mobile_qq&amp;amp;utm_campaign=client_share&amp;amp;app=news_article&amp;amp;utm_source=mobile_qq&amp;amp;iid=17386646174&amp;amp;utm_medium=toutiao_ios&quot; target=&quot;_blank&quot;&gt;决战双11：亿级访问量的Web前端页面优化技巧&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;我们都知道一次页面请求需要加载很多东西，包括文本、css样式、javascrict脚本、图片，加载的东西越多，页面的响应时间往往越长，体验就很不好。这就需要我们进行优化，提高页面响应速度。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;fiddler-plus高效调试分析利器&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/ankvps/article/details/76445339&quot; target=&quot;_blank&quot;&gt;Fiddler plus【高效调试分析利器】&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Fiddler是一个功能强大的HTTP抓包调试工具！但用起来却不是那么的顺手，界面繁杂、配置复杂，非常不符合高效程序猿的使用习惯… Fiddler plus 重新定义了Fiddler的CustomRules.js，从而使Fiddler拥有了更加简单、灵活、丰富的配置方式，高逼格的显示界面，让你用起来不再羞(gan)涩(ga)。&lt;/p&gt;

&lt;h4 id=&quot;nodejs-best-practices&quot;&gt;&lt;a href=&quot;https://github.com/i0natan/nodebestpractices&quot; target=&quot;_blank&quot;&gt;Node.js Best Practices&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;一个收集 Node.JS 最佳实践文章列表的项目，从排名最前的文章中挑选出来并保持随时更新。&lt;/p&gt;

&lt;h4 id=&quot;如何打造一个全满分网站&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011867361&quot; target=&quot;_blank&quot;&gt;如何打造一个全满分网站&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;前端的评测工具（平台）有很多种，这里列举了一些，以及如何针对评测工具反馈的各项指标进行优化。值得一提的是PWA的对应指标也在名单里。&lt;/p&gt;

&lt;h4 id=&quot;在线追踪压缩后的js出错代码&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30760361?refer=FrontendMagazine&quot; target=&quot;_blank&quot;&gt;在线追踪压缩后的JS出错代码&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;理解sourcemap以及如何跟踪JavaScript异常报错&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Nov 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/11/13/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/11/13/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.11.07期)</title>
        <description>&lt;h2 id=&quot;业界动态&quot;&gt;业界动态&lt;/h2&gt;

&lt;h4 id=&quot;news-nodejs-8-moves-into-long-term-support-and-nodejs-9-becomes-the-new-current-release-line&quot;&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/news-node-js-8-moves-into-long-term-support-and-node-js-9-becomes-the-new-current-release-line-74cf754a10a0&quot; target=&quot;_blank&quot;&gt;NEWS: Node.js 8 Moves into Long-Term Support and Node.js 9 Becomes the New Current Release Line&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Node 8成为LTS版本，当前发布版本为Node 9。Node的版本发布越来越快了。&lt;/p&gt;

&lt;h4 id=&quot;version-500-of-angular-now-available&quot;&gt;&lt;a href=&quot;https://blog.angular.io/version-5-0-0-of-angular-now-available-37e414935ced&quot; target=&quot;_blank&quot;&gt;Version 5.0.0 of Angular Now Available&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Angular 5.0.0 已经发布。作为一个包含新功能和错误修复的主要版本，继续专注于使 Angular 更小更快，更易于使用。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;
&lt;h4 id=&quot;译js-中的内存管理及常见的-4-种内存泄露处理方式&quot;&gt;&lt;a href=&quot;http://elevenbeans.github.io/2017/10/13/js-memory-management/&quot; target=&quot;_blank&quot;&gt;【译】JS 中的内存管理及常见的 4 种内存泄露处理方式&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;从 0 开始梳理内存管理以及回收问题，浅显易懂&lt;/p&gt;

&lt;h4 id=&quot;编写扁平化的代码&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30667142&quot; target=&quot;_blank&quot;&gt;编写扁平化的代码&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;给你的代码增加一点点函数式编程的特性，使用声明式编程编写更可读的代码。&lt;/p&gt;

&lt;h4 id=&quot;8大前端安全问题&quot;&gt;&lt;a href=&quot;http://insights.thoughtworks.cn/eight-security-problems-in-front-end-2/&quot; target=&quot;_blank&quot;&gt;8大前端安全问题&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文对前端安全问题进行了一次梳理，介绍了8个典型的前端安全问题，包括它们发生的原因以及防御办法。上篇点&lt;a href=&quot;http://insights.thoughtworks.cn/eight-security-problems-in-front-end/&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h4 id=&quot;you-are-managing-state-think-twice&quot;&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/managing-state-in-javascript-with-state-machines-stent&quot; target=&quot;_blank&quot;&gt;You are managing state? Think twice.&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文章讲述了作者对于flux和redux的思考，它们是否是状态管理，或者说更像是数据(流)管理？举例一个简单表单的各种交互状态，如何更好的管理它们。&lt;/p&gt;

&lt;h4 id=&quot;es6模块nodejs和michael-jackson办法&quot;&gt;&lt;a href=&quot;http://zcfy.cc/article/es6-modules-node-js-and-the-michael-jackson-solution-4023.html?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot; target=&quot;_blank&quot;&gt;ES6模块，Node.js和Michael Jackson办法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;JavaScript的模块化发展也可以说经历一段曲折，从 AMD/CMD、 CommonJs 规范开始 到现在的 ES6模块规定，以及后续一些新的提案来看，JavaScript的模块化应该逐步完善。本文中简述了 CommonJs 和 ES模块的区别，着重介绍了 ES6模块是如何工作的。&lt;/p&gt;

&lt;h4 id=&quot;打造丝般顺滑的-h5-翻页库&quot;&gt;&lt;a href=&quot;http://fex.baidu.com/blog/2017/10/build-a-silky-smooth-slide-library/&quot; target=&quot;_blank&quot;&gt;打造丝般顺滑的 H5 翻页库&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文讲述了一个「丝般顺滑」的 H5 翻页库的开发过程中遇到的一些问题和对应的解决方法。基本的滑动翻页模型建立之后，重点关注了性能的问题，分为手指离开屏幕前和手指离开屏幕后两个阶段。前一阶段主要聚焦于减少 DOM 操作。后一阶段聚焦于动画的性能，并且对比了 js 动画和 css 动画的性能数据，最后得出了在手指离开屏幕后使用 css 动画的结论。此外，我们还基于「数据驱动」的思想，在翻页效果和动画函数两部分进行了扩展，增强了翻页库的功能，也丰富了 H5 的展现效果。&lt;/p&gt;

&lt;h4 id=&quot;jquery前端国际化解决方案填坑日记&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/qq3401247010/article/details/78084229&quot; target=&quot;_blank&quot;&gt;jquery前端国际化解决方案“填坑日记&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;“前言：最近，新的平台还没有开发完成，原来的老项目又提出了新的需求：系统国际化。如果是前后端完全分离的开发模式，要做国际化，真的太简单了，有现成的解决方案，基于Node构建的时下热门的任何一种技术选型都有成熟的方案，比如：”&lt;/p&gt;

&lt;h4 id=&quot;前端性能的几个关键指标分析&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MDA2MTI1MA==&amp;amp;mid=2649086295&amp;amp;idx=1&amp;amp;sn=9086a65721d179b2b0d617e160f64594&amp;amp;chksm=be5bfefa892c77ec8a8fd39b92932334bcc4625d6f55b9687ad391540ab0382c2a1d32202665&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=10290UdAa5XlNvTvt8I2tE5n#rd&quot; target=&quot;_blank&quot;&gt;前端性能的几个关键指标分析&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;“对于一个网站如果希望抓住用户，网站的速度以及稳定性是非常重要的。&lt;br /&gt;
从各式各样的前端监控平台中，你都可以获得页面很多的性能指标。本文将介绍几个几个比较关键的指标，并给出相应的优化思路。”&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;
&lt;h4 id=&quot;重磅消息kotlin要支持ios开发和web开发了&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&amp;amp;mid=2651113865&amp;amp;idx=1&amp;amp;sn=6a2153fc5eb16c7d2c31e05c83dd6e7a&amp;amp;chksm=844c6054b33be9428fa788a2a2df33c98303131360a68548c67fafe44f63bf11cb2acc0aa57d&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=1104By2P97WkjzPC2Opt4lc2#rd&quot; target=&quot;_blank&quot;&gt;重磅消息！Kotlin要支持iOS开发和Web开发了！&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;“主题演讲当中提出的第一项重要公告，正是 Kotlin 1.2 候选发行版（简称 RC）的公布。此版本中囊括一系列新功能，包括对多个多平台项目的实验性支持、允许开发者在针对 JVM 与 JavaScript 的模块之间进行代码共享，同时涉及多项语言改进——包括支持在注释中使用数组字面量。”&lt;/p&gt;

&lt;h4 id=&quot;深入解读-java-9-新特性&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/ivj2SmTZqr5qVfPbauPZxg&quot; target=&quot;_blank&quot;&gt;深入解读 Java 9 新特性&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Java 9 终于在 9 月 21 日发布了,  在一个多月里时间大家想必已经都了解其有新特性， 本文可以带大家进一步了解Java 9 的新特性。&lt;/p&gt;

&lt;h4 id=&quot;从chrome源码看浏览器如何加载资源&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30558018&quot; target=&quot;_blank&quot;&gt;从Chrome源码看浏览器如何加载资源&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;以开源项目Chromium为实验对象，认识浏览器对各类请求资源分类的逻辑，每个资源请求的预处理及安全策略的检查，资源优先级等。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;
&lt;h4 id=&quot;人见人爱的-visual-studio-code&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30558463&quot; target=&quot;_blank&quot;&gt;人见人爱的 Visual Studio Code&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;如果你也用Visual Studio Code，这些插件可能会对你有帮助&lt;/p&gt;
&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;it工程师的自我管理&quot;&gt;&lt;a href=&quot;http://insights.thoughtworks.cn/self-management/?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot;&gt;IT工程师的自我管理&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;从文章标题来看，很容易让大家认为是一篇 工程师自我提升到大加的管理课， 其实不然，作者阐述了 如何 运用项目管理的技能来 管理自己的生活的故事，从生活中不同的方面（收集反馈、决策、时间和任务管理、情绪管理）来阐述这些问题和解决方案， 其中包含作者的思考逻辑，管理哲学的运用以及实施中使用的管理工具， 很有意思!&lt;/p&gt;

&lt;h4 id=&quot;how-and-why-to-speak-at-tech-conferences&quot;&gt;&lt;a href=&quot;https://hackernoon.com/how-and-why-to-speak-at-tech-conferences-1d50a3f548e0&quot; target=&quot;_blank&quot;&gt;How and Why to Speak at Tech Conferences&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在技术会议上演讲不是一件容易的事，本文介绍了为什么应该去演讲，以及如何去完成一场演讲。&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Nov 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/11/07/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/11/07/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.10.30期)</title>
        <description>&lt;h2 id=&quot;本期推荐&quot;&gt;本期推荐&lt;/h2&gt;

&lt;h4 id=&quot;写在-2017-的前端数据层不完全指北&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30050350&quot; target=&quot;_blank&quot;&gt;写在 2017 的前端数据层不完全指北&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;在前端技术的发展中，各个层面演进出不同的技术方案，如数据类型层面的 TypeScript，Flow，PropTypes，应用架构层面的 MVC，MVP，MVVM，还是应用状态层面的 Redux，MobX，RxJS，都各自有不同的观点，但这些方案所要解决的问题是共同的。本篇文章中以 MVVM 架构为例，逐层剖析前端数据层的共同痛点。&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;node-调试指南--inspector-协议&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30264842&quot; target=&quot;_blank&quot;&gt;Node 调试指南 —— Inspector 协议&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;v8 Inspector Protocol 是 node v6.3 新加入的调试协议，通过 websocket 与 Client/IDE 交互，同时基于 Chrome/Chromium 浏览器的 devtools 提供了图形化的调试界面。&lt;/p&gt;

&lt;h4 id=&quot;爱奇艺视频组件化之路&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0MjczMjM2NA==&amp;amp;mid=2247483846&amp;amp;idx=1&amp;amp;sn=be10e857dc4415d6adb4edbe5bf04152&quot; target=&quot;_blank&quot;&gt;爱奇艺视频组件化之路&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;爱奇艺在组件化上的尝试，用以解决业务间的耦合问题以及方便模块的相互调用。使得多业务线在复杂架构情况下能够独立开发测试，互不干扰，并统一调用接口。&lt;/p&gt;

&lt;h4 id=&quot;你真的了解-for-循环吗一道-for-循环-java-面试题引发的思考&quot;&gt;&lt;a href=&quot;https://my.oschina.net/lt0314/blog/1554809&quot; target=&quot;_blank&quot;&gt;你真的了解 for 循环吗？一道 for 循环 Java 面试题引发的思考&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;语言对基本的语法实现都差不多，本篇借助字节码理解 Java 中的 for 循环，还是非常不错的。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;无头浏览器-puppeteer-初探&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59e5a86c51882578bf185dba&quot; target=&quot;_blank&quot;&gt;无头浏览器 Puppeteer 初探&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Headless Broswer有很多，&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt; 有什么不一样？这里有篇 Puppeteer 入门文。&lt;/p&gt;

&lt;h4 id=&quot;react-作者的构思和演绎&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30277192&quot; target=&quot;_blank&quot;&gt;React 作者的构思和演绎&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这是 React 作者在 React 设计之初，对整个框架的思考，知其然也要知其所以然。&lt;/p&gt;

&lt;h4 id=&quot;vue2-原理浅谈&quot;&gt;&lt;a href=&quot;http://www.imhjm.com/article/59b902107dd03248a2e8d584&quot; target=&quot;_blank&quot;&gt;Vue2 原理浅谈&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;作者根据对 vue 的理解，浅谈了一些 vue 中几个主要模块的原理阐述。包含了数据响应原理、数据与视图如何联系、Virtual DOM 等特性的讲解。&lt;/p&gt;

&lt;h4 id=&quot;html-web-component-using-vanilla-javascript&quot;&gt;&lt;a href=&quot;https://ayushgp.github.io/html-web-components-using-vanilla-js/&quot; target=&quot;_blank&quot;&gt;HTML Web Component using Vanilla JavaScript&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在 react，vue 等框架越来越流行流行的同时，可能很多人已经忘记 Web Component。这项标准还有很多问题，浏览器的支持仍然优先，但是可以使用 polyfills，这篇教程将介绍如何创建自己的 HTML 标签作为组件。&lt;/p&gt;

&lt;h4 id=&quot;lyft-的-typescript-实践&quot;&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2017/10/TypeScript-practice-Lyft&quot; target=&quot;_blank&quot;&gt;Lyft 的 TypeScript 实践&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;来自 Lyft 的工程师介绍了向 TypeScript 转型的过程，说明 JavaScript 类型系统的重要性，对比 Flow 和 TypeScript 的差异点，以及他们的实践经验。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;napajs&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/napajs/wiki/introduction&quot; target=&quot;_blank&quot;&gt;napajs&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;微软团队发布的 Node 多线程库。该wiki是对库的几个核心概念的简介，让你对库工作原理有个全局的了解。&lt;/p&gt;

&lt;h4 id=&quot;a-list-of-everything-that-could-go-in-the-head-of-your-document&quot;&gt;&lt;a href=&quot;http://gethead.info/&quot; target=&quot;_blank&quot;&gt;A list of everything that could go in the head of your document&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;一份很详尽的 Head 指南大全，包含任何可以写入到文档中 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 的清单。&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;百度主任架构师谭待如何让不带团队的程序员负责重大项目&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyODMzMjY3OQ==&amp;amp;mid=2247483702&amp;amp;idx=1&amp;amp;sn=3b3a57694c38e23f712d89dbd5e46c5e&quot; target=&quot;_blank&quot;&gt;百度主任架构师谭待：如何让不带团队的程序员负责重大项目？&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;一般的管理都是与职权挂钩的，否则很多直接有效的调节手段就没法用，比如薪酬绩效，比如需要项目团队加班时直接下规定说谁不来就扣钱，我没有这样做，我能做是谈天聊心。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;https://zhuanlan.zhihu.com/p/30547811/&quot; target=&quot;_blank&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/sturloly&quot; target=&quot;_blank&quot;&gt;@sturloly&lt;/a&gt; building apps for my future starship&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 想当设计师的程序员不是一个好攻城狮&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 30 Oct 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/10/30/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/10/30/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.10.23期)</title>
        <description>&lt;h2 id=&quot;业界动态&quot;&gt;业界动态&lt;/h2&gt;

&lt;h4 id=&quot;vue-25-released&quot;&gt;&lt;a href=&quot;https://medium.com/the-vue-point/vue-2-5-released-14bd65bf030b&quot; target=&quot;_blank&quot;&gt;Vue 2.5 released&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Vue 2.5 正式发布，作者对于该版本的优化总结：更好的TypeScript 集成，更好的错误处理，更好的单文件功能组件支持以及更好的与环境无关的SSR&lt;/p&gt;

&lt;h4 id=&quot;wifi爆惊天漏洞krack可攻陷所有wifi网络&quot;&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2017/10/wifi-krack?utm_source=infoq&amp;amp;utm_medium=popular_widget&amp;amp;utm_campaign=popular_content_list&amp;amp;utm_content=homepage&quot; target=&quot;_blank&quot;&gt;WiFi爆惊天漏洞！KRACK可攻陷所有WiFi网络&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;我们发现 WPA2 当中存在一项严重安全漏洞。WPA2 为目前使用范围最广的 Wi-Fi 网络保护协议。身处攻击目标周边的恶意人士能够利用密钥重装攻击（Key Reinstallation Attacks，KRACK）利用此类安全漏洞。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;json-不要误会我真的不是javascript的子集&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29958439&quot; target=&quot;_blank&quot;&gt;JSON: 不要误会,我真的不是JavaScript的子集&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这些年我们都一直在说”JSON是JavaScript的一个子集”.然而事实却不是这样的。&lt;/p&gt;

&lt;h4 id=&quot;鼠标无限移动-js-api-pointer-lock简介&quot;&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2017/10/js-api-pointer-lock/&quot; target=&quot;_blank&quot;&gt;鼠标无限移动 JS API Pointer Lock简介&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;让鼠标完全脱离了浏览器窗口的限制，可以完美享受沉浸式操作体验，一个API就能搞定。&lt;/p&gt;

&lt;h4 id=&quot;web安全的三个攻防姿势&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011601837&quot; target=&quot;_blank&quot;&gt;Web安全的三个攻防姿势&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;关于Web安全的问题，是一个老生常谈的问题，作为离用户最近的一层，我们大前端确实需要把手伸的更远一点。&lt;/p&gt;

&lt;h4 id=&quot;javascript专题之解读-v8-排序源码&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011623637#articleHeader16&quot; target=&quot;_blank&quot;&gt;JavaScript专题之解读 v8 排序源码&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文介绍了 v8引擎 关于数组的排序完全采用了 JavaScript 实现，所采用的算法跟数组的长度有关，当数组长度小于等于 10 时，采用插入排序，大于 10 的时候，采用快速排序，文中详细的讲解了两种算法的原理、实现以及时间复杂度等。&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;浏览器内的事件队列&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/1iHmsIjh2mLqaOUvkR2RZA&quot; target=&quot;_blank&quot;&gt;浏览器内的事件队列&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;众所周知JavaScript是单线程运行的，同时又是可以异步执行的，具备这样特性的语言一般都是基于事件来驱动的，浏览器是如何给JavaScript提供了这么一个环境呢？通过本文可以简单的了解到JavaScript的执行过程。&lt;/p&gt;

&lt;h4 id=&quot;函数式编程在-reduxreact-中的应用&quot;&gt;&lt;a href=&quot;https://tech.meituan.com/functional_programming_in_redux.html&quot; target=&quot;_blank&quot;&gt;函数式编程在 Redux/React 中的应用&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;本文简述了软件复杂度问题及应对策略：抽象和组合；展示了抽象和组合在函数式编程中的应用；并展示了 Redux/React 在解决前端状态管理的复杂度方面对上述理论的实践。这其中包括了一段有趣的 Redux 推导。&lt;/p&gt;

&lt;h4 id=&quot;react作者的构思和演绎&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30277192?utm_source=com.daimajia.gold&amp;amp;utm_medium=social&quot; target=&quot;_blank&quot;&gt;React作者的构思和演绎&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;译文中讲述了React 核心开发者，对React设计之初整个框架的构思，是如何从简单到复杂的去演绎推理一个未来的产品，也能让我们站在更高的高度思考 React 的过去、现在和未来。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;writing-flat--declarative-code&quot;&gt;&lt;a href=&quot;https://peeke.nl/writing-flat-code&quot; target=&quot;_blank&quot;&gt;Writing flat &amp;amp; declarative code&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;本文介绍了为什么应该让代码扁平化，以及如何将一些函数式编程的特性引入你的代码库。&lt;/p&gt;

&lt;h4 id=&quot;如何写好一篇技术文章&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59e86ee76fb9a045257739d4?from=timeline&amp;amp;isappinstalled=0&quot; target=&quot;_blank&quot;&gt;如何写好一篇技术文章？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;技术那么多，到底哪种适合写哪种不适合写？本文就如何写好一篇「值得在技术社区发布的技术文章 」阐述了一些关键的因素。&lt;/p&gt;

&lt;h4 id=&quot;关键-css-和-webpack减少阻塞渲染的-css-的自动化解决方案&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/VAVT_JTJE1v2nXx8NVwP9Q&quot; target=&quot;_blank&quot;&gt;关键 CSS 和 Webpack：减少阻塞渲染的 CSS 的自动化解决方案&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;文章介绍了如何以编程方式来区分关键 CSS，并通过 Webpack 的自动化流程来实现该方案，从而达到减少阻塞渲染的 CSS 的目的，提升网站性能。&lt;/p&gt;

&lt;h4 id=&quot;使用vscode开发nodejs&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/gezhonglei2007/article/details/50574652&quot; target=&quot;_blank&quot;&gt;使用VSCode开发Nodejs&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文本介绍是Nodejs一种轻量级的开发工具——使用VSCode。尽管VScode看起来更像是Uedit、Noteplus等强大文件编辑器，但它也提供了可扩展的、强大的提示功能（特别是文件间js引用提示），以及内置Nodejs调试功能，让它有别于一般的编辑工具。&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;2018前端校招总结&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59e9cea151882561a05a355a&quot; target=&quot;_blank&quot;&gt;2018前端校招总结&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;基本上的大公司对于前端校招同学的要求都不仅仅局限于前端领域，因为对于一般的候选人来说都是侧重潜力的考察。而小一点的公司对于候选人的技术能力以及项目经历不会有过多的要求，更多的是希望能够以比较低廉的价格签下一个愿意做切图之类工作的同学。个人觉得对于同学未来几年的发展不是很好。&lt;/p&gt;

&lt;h4 id=&quot;初级程序员如何快速成长&quot;&gt;&lt;a href=&quot;https://www.zhihu.com/question/26572626/answer/246901769&quot; target=&quot;_blank&quot;&gt;初级程序员如何快速成长？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;工作前三年是职业生涯中成长最快的几年，在这段时间里你会充满激情，做事专注，也容易养成良好的习惯。在我们公司有些同学在前三年中就快速成为某一个领域的技术专家，有些同学也可能止步不前。本文和大家一起探讨下如何在三年内快速成长为一名技术专家。&lt;/p&gt;

&lt;h4 id=&quot;如何成为一个技术全面的架构师&quot;&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/the-well-rounded-architect&quot; target=&quot;_blank&quot;&gt;如何成为一个技术全面的架构师&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;一个好的架构师需要是技术全面的架构师，本文从六个方面探讨了成为一个技术全面的架构师所必须具备的能力：作为技术领导者、作为开发人员、聚焦系统、企业家思维、权衡策略思维与战术思维以及良好的沟通。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/sturloly&quot; target=&quot;_blank&quot;&gt;@sturloly&lt;/a&gt; building apps for my future starship&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 一个程序圈的间谍&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 23 Oct 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/10/23/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/10/23/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.10.16期)</title>
        <description>&lt;h2 id=&quot;本期推荐&quot;&gt;本期推荐&lt;/h2&gt;

&lt;h4 id=&quot;反击爬虫前端工程师的脑洞可以有多大&quot;&gt;&lt;a href=&quot;http://litten.me/2017/07/09/prevent-spiders/&quot; target=&quot;_blank&quot;&gt;反击爬虫，前端工程师的脑洞可以有多大&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;反爬虫策略的关键在于识别真实用户和机器，这些策略大多在于后端。但爬虫是可以无限接近于真人，这篇文章介绍了前端能做的一些好玩的反击方式。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;传送门react-portal&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29880992&quot; target=&quot;_blank&quot;&gt;传送门：React Portal&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;React v16直接支持Portal，是因为Portal这个功能真的是必不可少，不然对话框这样的场景都没法应付。&lt;/p&gt;

&lt;h4 id=&quot;如何无痛降低-if-else-面条代码复杂度&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59dc66256fb9a0452a3b4832?utm_source=gold_browser_extension&quot; target=&quot;_blank&quot;&gt;如何无痛降低 if else 面条代码复杂度&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;对于代码最常用的逻辑语句if else在复杂逻辑场景下如何避免出现面条代码，提高代码的可读性及更好的维护是程序员需要掌握的编程技巧。&lt;/p&gt;

&lt;h4 id=&quot;前端中的-pipeline&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28561932&quot; target=&quot;_blank&quot;&gt;前端中的 Pipeline&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;计算机领域的 Pipeline通常认为起源于 Unix。最初 Douglas Mcllroy 发现很多时候人们会将 shell 命令的输出传递给另外一个 shell 命令，因此就提出了 Pipeline这一概念。而在前端领域，也有不少的Pipeline，如Express在1.0引入Middleware Pipeline，以及建立在node Stream上面的Pipeline和Promise Pipeline等，这些Pipeline也使得代码能够具有更好的可读性。&lt;/p&gt;

&lt;h4 id=&quot;理解css中的bfc块级可视化上下文译&quot;&gt;&lt;a href=&quot;http://flypursue.com/jekyll/update/2015/08/10/bfc.html&quot; target=&quot;_blank&quot;&gt;理解CSS中的BFC(块级可视化上下文)[译]&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;网页布局中，很多人都会无意中用到 块级格式化上下文（block formatting context）模式，即所说的BFC。 它是css中基于box的一个布局对象，它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。&lt;/p&gt;

&lt;h4 id=&quot;javascript-浮点数陷阱及解法&quot;&gt;&lt;a href=&quot;https://github.com/camsong/blog/issues/9&quot; target=&quot;_blank&quot;&gt;JavaScript 浮点数陷阱及解法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;JavaScript 浮点数运算时总会遇到浮点数误差问题， 总感觉很困惑。本文帮你理清这背后的原理以及解决方案，还会向你解释JS中的大数危机和四则运算中会遇到的坑。&lt;/p&gt;

&lt;h4 id=&quot;微前端---将微服务理念延伸到前端开发中&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/zhuanzhuanfe/p/7644846.html&quot; target=&quot;_blank&quot;&gt;微前端 - 将微服务理念延伸到前端开发中&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文描述了采用不同 JavaScript 技术框架的多个团队中协同构建一个现代化前端 Web 应用所需要的技术、策略和方法。&lt;/p&gt;

&lt;h2 id=&quot;产品设计&quot;&gt;产品设计&lt;/h2&gt;

&lt;h4 id=&quot;设计灵感--消息界面&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29771780&quot; target=&quot;_blank&quot;&gt;设计灵感 | 消息界面&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;当今世界最好的前端UI设计荟萃，不可错过~&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;聊聊-git-改变历史&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29497618&quot; target=&quot;_blank&quot;&gt;聊聊 Git 「改变历史」&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;聊聊 Git 怎么改变历史记录，虽然git提供这样的功能，但在多人协作的项目中最好不要用到，除非你非常有把握。「历史（记录）没有因你而变，而只是改变了历史（记录）的呈现方式」&lt;/p&gt;

&lt;h4 id=&quot;http-缓存机制一二三&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29750583&quot; target=&quot;_blank&quot;&gt;HTTP 缓存机制一二三&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;浏览器缓存也包含很多内容： HTTP 缓存、indexDB、cookie、localstorage 等等。这里我们只讨论 HTTP 缓存相关内容。&lt;/p&gt;

&lt;h4 id=&quot;为什么-sql-正在击败-nosql这对未来的数据意味着什么&quot;&gt;&lt;a href=&quot;http://geek.csdn.net/news/detail/238939&quot; target=&quot;_blank&quot;&gt;为什么 SQL 正在击败 NoSQL，这对未来的数据意味着什么&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;在过去的十年里，由于 SQL 无法满足这些越来越多的要求，软件开发人员就抛弃了它，NoSQL 也就因此而渐渐发展起来：MapReduce，Bigtable，Cassandra，MongoDB 等等。然而，如今 SQL 正在复出，缘由如何，这对数据社区有什么影响，看看本文的分析。&lt;/p&gt;

&lt;h4 id=&quot;架构师必须知道的架构设计原则&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2650998170&amp;amp;idx=1&amp;amp;sn=6defd4f0a9fdb5cf93e6977080c61c70&quot; target=&quot;_blank&quot;&gt;架构师必须知道的架构设计原则&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一位十多年开发者，对架构设计原则的解读 ，总结了 GRASP 通用职责分配软件模式 、 SOLID 面向对象设计原则 、 AKF 架构原则、 CAP 定理、BASE 理论以及组织和系统改进原则   。并对其主要内容作了自己的解读。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;essential-image-optimization&quot;&gt;&lt;a href=&quot;https://images.guide/&quot; target=&quot;_blank&quot;&gt;Essential Image Optimization&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Addy Osmani 写的一本免费的电子书，为什么我们都应该自动化进行图像优化，内容涵盖了格式，解码器，高效压缩技术等。&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;github-正在影响你的职业生涯&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59ddccd36fb9a0450e75185f&quot; target=&quot;_blank&quot;&gt;Github 正在影响你的职业生涯&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;名气决定了你在一个信用网络中的位置。换一家公司会降低你的知名度。如果你在一个小镇生活了很长一段时间，那么小镇上的每一个人都会认识你。搬到另一个地区会导致名气降低。最终，你会到一个位置，在这个位置没有人认识你，甚至没有人认识听说过你的人。
你会失去你的一度和二度甚至是三度人脉。你与他人共事或者向私有仓库提交代码建立起来的信任也将消失。除非你通过大会演讲等方式树立自己的品牌。
但是，假如这些工作是在 Github 上完成的，建立的信任就不会消失。因为这些工作都是在网络上公开的。&lt;/p&gt;

&lt;h4 id=&quot;github-年度报告2017-年最受欢迎的编程语言&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59e0352f518825541b03c5e1&quot; target=&quot;_blank&quot;&gt;GitHub 年度报告，2017 年最受欢迎的编程语言&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;2017 年 GitHub 上最流行的 15 种编程语言及前十最火热的项目排行榜，分别由JavaScript及TensorFlow登顶。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 想当设计师的程序员不是一个好攻城狮&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 16 Oct 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/10/16/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/10/16/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.10.02期)</title>
        <description>&lt;h2 id=&quot;本期推荐&quot;&gt;本期推荐&lt;/h2&gt;
&lt;h4 id=&quot;es6-promise模式与反模式&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29783901&quot; target=&quot;_blank&quot;&gt;ES6 Promise：模式与反模式&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这是一篇有用的关于常见 Promise 模式和反模式的文章。&lt;/p&gt;

&lt;h2 id=&quot;业界动态&quot;&gt;业界动态&lt;/h2&gt;

&lt;h4 id=&quot;react-v160&quot;&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2017/09/26/react-v16.0.html&quot; target=&quot;_blank&quot;&gt;React v16.0&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;React 16 如期发布，遵循 MIT 许可。 当地时间 9月 26 日，FB 工程师 Andrew Clark 在 React 官方主页发文，宣布 React v16.0 发布，并介绍了新版本中的改进内容。&lt;/p&gt;

&lt;h4 id=&quot;nodejs-㕛分家了后续发版将受影响&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28799213&quot; target=&quot;_blank&quot;&gt;Node.js 㕛分家了，后续发版将受影响&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本周，Node 社区的几个核心成员又从 Node.js master 分支 fork 出了一个项目，名叫 Ayo.js。&lt;/p&gt;

&lt;h4 id=&quot;firefox突然提速一倍chrome自愧不如&quot;&gt;&lt;a href=&quot;http://www.toutiao.com/a6470454402669871629/?tt_from=mobile_qq&amp;amp;utm_campaign=client_share&amp;amp;app=news_article&amp;amp;utm_source=mobile_qq&amp;amp;iid=0&amp;amp;utm_medium=toutiao_ios&quot; target=&quot;_blank&quot;&gt;Firefox突然提速一倍！Chrome自愧不如&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;曾经将IE浏览器斩落马下的Firefox虽然如今没那么强势了，如日中天的是Google Chrome，但是火狐从来没放弃努力，今天就放出了全新的Firefox 57版本，但是认为单纯的数字已经不足以反应新版的特别，所以命名为“Firefox Quantum”。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;深度剖析如何实现一个-virtual-dom-算法&quot;&gt;&lt;a href=&quot;http://segmentfault.com/p/1210000011364809&quot; target=&quot;_blank&quot;&gt;深度剖析：如何实现一个 Virtual DOM 算法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文会在教你怎么用 300~400 行代码实现一个基本的 Virtual DOM 算法，并且尝试尽量把 Virtual DOM 的算法思路阐述清楚。希望在阅读本文后，能让你深入理解 Virtual DOM 算法，给你现有前端的编程提供一些新的思考。&lt;/p&gt;

&lt;h4 id=&quot;promise-异步流程控制&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59cdb6526fb9a00a4e67c7fb&quot; target=&quot;_blank&quot;&gt;Promise 异步流程控制&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;由一道面试题发散开来，从并发请求，控制并发量，顺序处理等方面深入理解 Promise 的 API 和其使用场景。&lt;/p&gt;

&lt;h4 id=&quot;nodejs-十问&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29650110&quot; target=&quot;_blank&quot;&gt;Node.js 十问&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;node开发者未必都了解的十个问题，问题涉及了v8引擎，语法使用到模块依赖等。&lt;/p&gt;

&lt;h4 id=&quot;a-brief-history-of-modularity&quot;&gt;&lt;a href=&quot;https://ponyfoo.com/articles/brief-history-of-modularity#nodejs-and-the-advent-of-commonjs&quot; target=&quot;_blank&quot;&gt;A Brief History of Modularity&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一瞥前端模块化的历史，从最开始的script标签和闭包到当前最热门的ES6 module，babel和webpack。&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;浅谈hybrid技术的设计与实现前言&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/yexiaochai/p/4921635.html&quot; target=&quot;_blank&quot;&gt;浅谈Hybrid技术的设计与实现前言&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本篇博客中，作者系统的介绍了hybrid发展史，也对其开发模式作了详细讲解。从交互设计到Hybrid的资源管理，包含H5与Native通信、交互格式约定、跳转、数据请求等技术细节都有所介绍，对新接触Hybrid 开发模式的同学很有帮助。&lt;/p&gt;

&lt;h4 id=&quot;安全技能学习笔记反射型-xss-sql-注入&quot;&gt;&lt;a href=&quot;https://testerhome.com/topics/9898&quot; target=&quot;_blank&quot;&gt;安全技能学习笔记——反射型 XSS 、SQL 注入&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;很详细地介绍了两个基本的网路安全技巧，以及详细的攻击示例，很具参考价值。&lt;/p&gt;

&lt;h4 id=&quot;什么是-base64-算法&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s/H5U53RayntyX4-turj1j8A&quot; target=&quot;_blank&quot;&gt;什么是 Base64 算法？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这次玻璃猫为我们带来的是Base64 算法的介绍，通过两只小仓鼠的对答，可以很好的了解 ASCII 和Base64的基本原理。&lt;/p&gt;

&lt;h4 id=&quot;他们十年做出h5界photoshop还说流量平权才是未来&quot;&gt;&lt;a href=&quot;http://www.toutiao.com/a6465451450428113165/?tt_from=mobile_qq&amp;amp;utm_campaign=client_share&amp;amp;app=news_article&amp;amp;utm_source=mobile_qq&amp;amp;iid=5574997551&amp;amp;utm_medium=toutiao_ios&quot; target=&quot;_blank&quot;&gt;他们十年做出“H5界Photoshop”，还说流量平权才是未来&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;iH5是一个完全可视化的HTML5应用编辑工具，它能抽离H5技术的底层代码逻辑，归并为“拖拽”“单击”等可视化操作，改变了HTML5的生产方式。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;如何读懂火焰图&quot;&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2017/09/flame-graph.html&quot; target=&quot;_blank&quot;&gt;如何读懂火焰图？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;通过火焰图查看性能指标，了解如何通过perf指令生成的火焰图进行性能指标分析以及如何对node服务进程生成对应的火焰图？&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;程序员的创业陷阱接私活&quot;&gt;&lt;a href=&quot;https://segmentfault.com/p/1210000011379205&quot; target=&quot;_blank&quot;&gt;程序员的创业陷阱：接私活&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在我和你有一样能力的时候，我曾经说过一句话：我希望我死前的最后一个动作是按下 【Enter】，我写代码的动力不是赚钱 ( 当然赚钱很重要，但如果只是赚钱，我大可去作直销、卖保险、到大公司上班 … )，精准来说不只是赚钱，我的动力来源来自于我写出来的代码可以让非常多人使用，真正帮助到很多人，而且很多人都说好。( 相信我，如果你真的做到这一点，其实你也赚到钱了 )&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;https://zhuanlan.zhihu.com/p/29427394&quot; target=&quot;_blank&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 想当设计师的程序员不是一个好攻城狮&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 02 Oct 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/10/02/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/10/02/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.09.25期)</title>
        <description>&lt;h2 id=&quot;业界动态&quot;&gt;业界动态&lt;/h2&gt;

&lt;h4 id=&quot;facebook将修改reactjestflow-与-immutablejs授权许可&quot;&gt;&lt;a href=&quot;https://juejin.im/entry/59c5c4645188253da713d999&quot; target=&quot;_blank&quot;&gt;Facebook将修改React、Jest、Flow 与 Immutable.js授权许可&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Facebook妥协？将用MIT协议重新授权我们的开源项目React、Jest、Flow和Immutable.js。&lt;/p&gt;

&lt;h4 id=&quot;thinkjs-3-正式版发布&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29031203&quot; target=&quot;_blank&quot;&gt;ThinkJS 3 正式版发布！&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ThinkJS 是一款拥抱未来的 Node.js Web 框架，致力于集成项目最佳实践，规范项目让企业级团队开发变得更加简单，更加高效。&lt;/p&gt;

&lt;h4 id=&quot;upcoming-typescript-changes-in-vue-25&quot;&gt;&lt;a href=&quot;https://medium.com/the-vue-point/upcoming-typescript-changes-in-vue-2-5-e9bd7e2ecf08&quot; target=&quot;_blank&quot;&gt;Upcoming TypeScript Changes in Vue 2.5&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Vue2.5即将对TypeScript作出更新以达到两者API的更好的集成，此次更新对于非使用TypeScript的Vue用户不会造成影响。&lt;/p&gt;

&lt;h4 id=&quot;去哪儿网迷你react的研发心得&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011235844&quot; target=&quot;_blank&quot;&gt;去哪儿网迷你React的研发心得&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;去哪儿对于React框架的简化实践作品&lt;a href=&quot;https://github.com/YMFE/qreact&quot;&gt;QReact&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;为处理升级过程的问题-angular-5-将会推迟发布&quot;&gt;&lt;a href=&quot;http://www.oschina.net/news/88843/angular-5-delayed&quot; target=&quot;_blank&quot;&gt;为处理升级过程的问题 Angular 5 将会推迟发布&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Angular 发布历史，以及版本号的问题&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;浏览器的渲染过程与原理&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29418126&quot; target=&quot;_blank&quot;&gt;浏览器的渲染：过程与原理&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文不是关于浏览器渲染的底层原理或前端优化具体细节的讲解，而是关于浏览器对页面的渲染——这一过程的描述及其背后原理的解释。这是因为前端优化是一个非常庞大且零散的知识集合，一篇文章如果要写优化的具体方法恐怕只能做一些有限的列举。&lt;/p&gt;

&lt;h4 id=&quot;深入-javascript-数组进化与性能&quot;&gt;&lt;a href=&quot;http://zcfy.cc/article/diving-deep-into-javascript-array-8211-evolution-038-performance-void-canvas-4202.html&quot; target=&quot;_blank&quot;&gt;深入 JavaScript 数组：进化与性能&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;起初在JavaScript中 数组并不是一串连续的内存位置，而是类似哈希映射（hash-maps）或字典（dictionaries）来存储值，在现代的 JS引擎中是会给数组分配连续内存的，也仅仅是数据中元素是相同类型的，以及 跟随 ES2015/ES6 有了更多的演进，TC39 决定引入类型化数组（Typed Arrays），JS 也开始拥有了 ArrayBuffer。&lt;/p&gt;

&lt;h4 id=&quot;60-行-js-代码搞定一个下拉刷新组件&quot;&gt;&lt;a href=&quot;http://elevenbeans.github.io/2017/09/19/pull-to-refresh/&quot; target=&quot;_blank&quot;&gt;60 行 JS 代码搞定一个下拉刷新组件&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;69行代码实现web的pull to refresh功能&lt;/p&gt;

&lt;h4 id=&quot;web服务器应用程序服务器http服务器区别&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/zhaoyl/archive/2012/10/10/2718575.html&quot; target=&quot;_blank&quot;&gt;WEB服务器、应用程序服务器、HTTP服务器区别&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;“WEB服务器、应用程序服务器、HTTP服务器有何区别？IIS、Apache、Tomcat、Weblogic、WebSphere都各属于哪种服务器，…” 作者做了详细的梳理。&lt;/p&gt;

&lt;h4 id=&quot;再见babel-preset-2015&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29506685&quot; target=&quot;_blank&quot;&gt;再见，babel-preset-2015&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Babel 的官网上在9月宣布 ES2015 / ES2016/ ES2017 等等 ES20xx 时代的 presets 通通被废弃（deprecated），取而代之的是 babel-preset-env。除此之外，还提供更便捷的 polyfill 解决方案。&lt;/p&gt;

&lt;h4 id=&quot;redux-的问题reactmobx-和-realm-能解决吗&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29574957&quot; target=&quot;_blank&quot;&gt;Redux 的问题：React、MobX 和 Realm 能解决吗&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;没有任何工具对于每一种情况都是完美的，并不建议彻底放弃 Redux。Redux 很棒，但随之而来的是创建附加的样板代码，所以业界出现很多整合的开源方案，或者干脆尝试一下 MobX。总之，选择最合适的方案，就像是 Redux 的作者写到的，你可能不需要 Redux。&lt;/p&gt;

&lt;h4 id=&quot;html5扩展了-htmldocument-增加了新的功能&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011221472&quot; target=&quot;_blank&quot;&gt;HTML5扩展了 HTMLDocument ，增加了新的功能。&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;与HTML5中新增的其他DOM扩展类似，这些变化同样基于那些已经得到很多浏览器完美支持的专有扩展。所以，尽管这些扩展被写入标准的时间相对不长，但很多浏览器很早就已经支持这些功能了。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;iphone-x的缺口和css&quot;&gt;&lt;a href=&quot;http://www.w3cplus.com/css/the-notch-and-css.html&quot; target=&quot;_blank&quot;&gt;iPhone X的缺口和CSS&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;iPhone X机型的‘刘海’设计对于前端工程师来说，无疑是崩溃的，为此要为项目作出不少的调整。文章介绍了几种trick，以达到最小的开发成本达到较为和谐的效果。&lt;/p&gt;

&lt;h4 id=&quot;你真的会用-babel-吗&quot;&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011155061?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot;&gt;你真的会用 Babel 吗?&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本篇文章详细讲解了 Bable 常使用几个包的具体的作用及区别。虽然说工具只要会使用就行， 但了解他们的具体的内容，也才能更好的使用它们。&lt;/p&gt;

&lt;h4 id=&quot;轻松把你的项目升级到pwa&quot;&gt;&lt;a href=&quot;http://www.tuicool.com/articles/ueUBjie&quot; target=&quot;_blank&quot;&gt;轻松把你的项目升级到PWA&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;PWA（Progressive Web Apps,渐进式网页应用）是Google在2015年推出的项目，致力于通过web app获得类似native app体验的网站。&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;程序世界里的不信任原则&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29470110&quot; target=&quot;_blank&quot;&gt;程序世界里的不信任原则&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;人与人之间最重要的是信任，但程序的世界里，可能信任越少越好；我越发觉得越是高性能高可用的系统里，不信任原则会体现得更加淋漓尽致。 为了少走弯路，写下这篇文章留给自己参考，其中一些是自己踩过的一些坑；一些是接手他人系统时触过的雷；还有一些是从别人分享的经验学习得来；能力有限，先记下自己的一些体会，错误的地方再慢慢改正。&lt;/p&gt;

&lt;h4 id=&quot;如何成为优秀的程序员&quot;&gt;&lt;a href=&quot;http://insights.thoughtworks.cn/excellent-developer/&quot; target=&quot;_blank&quot;&gt;如何成为优秀的程序员？&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;如何才能成为一个厉害的程序员，作者提出一些很不错的观点：锻炼身体，培养一个编程之外的爱好，持续学习，正确应对犯错，不要囿于角色，展示你的创意，以及练习手速。&lt;/p&gt;

&lt;h4 id=&quot;我的-318-之旅无关朝圣无关梦想只是骑行而已&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29420949&quot; target=&quot;_blank&quot;&gt;我的 318 之旅：无关朝圣，无关梦想，只是骑行而已&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;去年的那个夏天，在离开杭州之后，开始一个长长的假期，决定骑车去拉萨，抱着玩玩的心态，一不小心就完成这段旅程，一段有趣的经历。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;https://zhuanlan.zhihu.com/p/29630098&quot; target=&quot;_blank&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/sturloly&quot; target=&quot;_blank&quot;&gt;@sturloly&lt;/a&gt; building apps for my future starship&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 想当设计师的程序员不是一个好攻城狮&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 25 Sep 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/09/25/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/09/25/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.09.18期)</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本周，Facebook 和 Github 推出 Atom-IDE，另一则消息是 Sublime Text 3 本周开始推送，全面替代 Sublime Text 2。另一方面，Visual Studio Code 的支持者甚多，不乏很多因为性能问题放弃 Atom 的用户。大家，更中意的是什么 IDE/Editor ，宇宙第一的 Visual Studio，还是 JetBrains 系列，或者是 Emacs、Vim 呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;本期推荐&quot;&gt;本期推荐&lt;/h2&gt;

&lt;h4 id=&quot;学习-javascript9-个常见错误阻碍你进步&quot;&gt;&lt;a href=&quot;https://github.com/xitu/gold-miner/blob/master/TODO/learning-javascript-9-common-mistakes.md&quot; target=&quot;_blank&quot;&gt;学习 JavaScript：9 个常见错误阻碍你进步&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;对于刚学习 JavaScript 的同学来说， 或多或少都会遇到些问题， 这些问题很可能阻碍你的成长，不要慌，也正是这些问题促使你的成长。文中总结了9了常见的学习 JS 的问题，帮你提前预热下。&lt;/p&gt;

&lt;h2 id=&quot;业界动态&quot;&gt;业界动态&lt;/h2&gt;

&lt;h4 id=&quot;在-nodejs-中使用原生-es-模块&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29314408&quot; target=&quot;_blank&quot;&gt;在 Node.js 中使用原生 ES 模块&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.5.0/&quot;&gt;Node 8.5.0&lt;/a&gt; 已经发布，开始支持 ES 模块，目前还需要增加命令行参数选项，计划是在 Node.js 10 LTS 中默认支持。&lt;/p&gt;

&lt;h4 id=&quot;facebook-和-github-两大巨头联手推出-atom-ide&quot;&gt;&lt;a href=&quot;http://blog.atom.io/2017/09/12/announcing-atom-ide.html&quot; target=&quot;_blank&quot;&gt;Facebook 和 GitHub 两大巨头联手推出 Atom-IDE&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;facebook 联手 github 推出 Atom-IDE，只需要下载相关工具包及支持语言。目前 Atom V1.21 才支持最新版的工具包。&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;15分钟成为-git-专家&quot;&gt;&lt;a href=&quot;http://www.jianshu.com/p/c221f99f0bfd&quot; target=&quot;_blank&quot;&gt;15分钟成为 GIT 专家&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Git 可能看起来像一个复杂的系统，但是你一旦理解了内部的概念，使用 Git 工作会变成一件愉悦的体验。&lt;/p&gt;

&lt;h4 id=&quot;v8-引擎中的元素种类&quot;&gt;&lt;a href=&quot;https://v8project.blogspot.com/2017/09/elements-kinds-in-v8.html&quot; target=&quot;_blank&quot;&gt;V8 引擎中的“元素种类”&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;V8引擎针对数组元素类型做的遍历优化&lt;/p&gt;

&lt;p&gt;文章讲述了 V8 引擎针对数组元素类型做的遍历优化，在语言层级及引擎层级对于元素类型的区分颗粒度不同。引擎层级通过对数组元素进行了21种元素种类区分实现不同的优化方案。&lt;/p&gt;

&lt;h4 id=&quot;小红书里的秘密机器学习如何帮助十人算法团队快速达成目标&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5NzkxMzg1Nw==&amp;amp;mid=2653162991&amp;amp;idx=1&amp;amp;sn=0340dab728514c9998f6af10aab4d412&quot; target=&quot;_blank&quot;&gt;小红书里的秘密：机器学习如何帮助十人算法团队快速达成目标&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;小红书作为一个社区电商，目标是让全世界的好生活触手可及，那么如何帮助用户在社区里发现好生活，又如何引导用户找到值得剁手的好产品呢？本文整理自 ArchSummit 深圳演讲，探讨如何运用机器学习和人工智能，帮助小红书不到 10 人的算法团队快速接近目标。&lt;/p&gt;

&lt;h4 id=&quot;zsh-开发指南一变量和语句&quot;&gt;&lt;a href=&quot;http://www.jianshu.com/p/939a15be3849&quot; target=&quot;_blank&quot;&gt;Zsh 开发指南（一）：变量和语句&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;因为 zsh 基本兼容 bash，不少人使用 bash 语法写 zsh 脚本，因为 bash 的通用性更好，但这样就无法利用 zsh 的众多优秀特性。熟悉下 zsh 下独有的特性，才能写出更好用的 zsh 脚本。&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;react-全家桶与前端单元测试艺术&quot;&gt;&lt;a href=&quot;http://insights.thoughtworks.cn/react-and-unit-testing/&quot; target=&quot;_blank&quot;&gt;React 全家桶与前端单元测试艺术&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;好的测试来自于好的代码，如果说有艺术，那也是代码的艺术。科学的单元划分可以让你摆脱mock，减少依赖，提高并行度，不依赖实现/易重构，提高测试对业务的覆盖率，以及易学易用，大幅减少测试代码。&lt;/p&gt;

&lt;h4 id=&quot;为什么我们要做三份-webpack-配置文件&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29161762&quot; target=&quot;_blank&quot;&gt;为什么我们要做三份 Webpack 配置文件&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;通过本文来介绍一种用 3 个 JS 文件来配置 Webpack 的方法，这里借鉴了很多开源项目的配置，同时也结合了我们自己在开发中碰到的种种问题解决方案。&lt;/p&gt;

&lt;h4 id=&quot;redux-进阶系列如何合理地设计-state&quot;&gt;&lt;a href=&quot;http://www.jianshu.com/p/085c426ee61e&quot; target=&quot;_blank&quot;&gt;Redux 进阶系列：如何合理地设计 State&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;设计 Redux State 的关键在于，像设计数据库一样设计 State，而 action、reducer 等则是操作这个数据库的 SQL 语句。&lt;/p&gt;

&lt;h4 id=&quot;immutablejs-与-reactredux-及-reselect-的实践&quot;&gt;&lt;a href=&quot;http://blog.codingplayboy.com/2017/09/14/immutable-react-redux/&quot; target=&quot;_blank&quot;&gt;Immutable.js 与 React、Redux 及 reselect 的实践&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;本文作者从 Immutable 与 Redux、reselect 在项目中实践出发，阐述 Immutable.js 与 React、Redux 及 reselect 的组合实践及优化，最后总结使用 Immutable 可能遇到的一些问题及解决方式。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;这里有一份给你的前端学习路线图&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29039717&quot; target=&quot;_blank&quot;&gt;这里有一份给你的前端学习路线图&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一位来自迪拜的工程师帅哥哥 —— Kamran Ahmed 在 Github 上发布了一个项目（准确地说是一篇文章），名字叫《Web Developer Roadmap - 2017》，翻译过来大致就是《2017 版 Web 开发者路线图》，分成三个部分 —— 前端、后端以及运维开发。&lt;/p&gt;

&lt;h4 id=&quot;jszie--find-out-minified-and-gzipped-npm-package-size&quot;&gt;&lt;a href=&quot;https://github.com/antonmedv/jsize&quot; target=&quot;_blank&quot;&gt;jszie – Find out minified and gzipped npm package size&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;利用这个小工具，可以快速获知某个库在 gzip 之后的大小。&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;卡辛斯基的警告&quot;&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2017/09/unabomber.html&quot; target=&quot;_blank&quot;&gt;卡辛斯基的警告&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;科学技术一直是推动社会进步的主要动力，不断改善着人类生活的同时，似乎也决定未来人类的命运。本文阮一峰老师引用20年前卡辛斯基发表的《论工业社会及其未来》的文章，讲述着技术与人类自由之争、技术与未来人类命运的关联。&lt;/p&gt;

&lt;h4 id=&quot;我做了六百万字的歌词分析告诉你中国-rapper-都在唱些啥&quot;&gt;&lt;a href=&quot;http://www.g-cores.com/articles/26152&quot; target=&quot;_blank&quot;&gt;我做了六百万字的歌词分析，告诉你中国 Rapper 都在唱些啥&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这个夏天嘻哈第一次走到地上，HipHop 到底在唱些什么，各个国家和地区的 Rapper 们想要说的聊的唱的都有哪些特色。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;https://zhuanlan.zhihu.com/p/29427394&quot; target=&quot;_blank&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/sturloly&quot; target=&quot;_blank&quot;&gt;@sturloly&lt;/a&gt; building apps for my future starship&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 想当设计师的程序员不是一个好攻城狮&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 18 Sep 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/09/18/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/09/18/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>ELSE 技术周刊(2017.09.11期)</title>
        <description>&lt;h2 id=&quot;业界动态&quot;&gt;业界动态&lt;/h2&gt;

&lt;h4 id=&quot;震惊苹果向开发者低头开始支持service-worker&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28293894&quot; target=&quot;_blank&quot;&gt;震惊！苹果向开发者低头？！！开始支持Service Worker&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;PWA更进一步了！但是听到这个消息，我怎么就立刻想到浏览器兼容呢？我爱了那么多年的IE就要移情别恋了。&lt;/p&gt;

&lt;h4 id=&quot;announcing-yarn-10&quot;&gt;&lt;a href=&quot;https://code.facebook.com/posts/274518539716230&quot; target=&quot;_blank&quot;&gt;Announcing Yarn 1.0&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Yarn发布1.0版本，作为npm管理工具，目前已经有不少大厂商选择了yarn&lt;/p&gt;

&lt;h2 id=&quot;前端开发&quot;&gt;前端开发&lt;/h2&gt;

&lt;h4 id=&quot;cordova-我们做一个app吧&quot;&gt;&lt;a href=&quot;http://www.jianshu.com/p/50d609f0d2c6&quot; target=&quot;_blank&quot;&gt;Cordova: 我们做一个App吧&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本篇展示了如何利用Cordova制作一个Android App。&lt;/p&gt;

&lt;h4 id=&quot;监控平台前端sdk开发实践&quot;&gt;&lt;a href=&quot;https://tech.meituan.com/hunt-sdk-practice.html&quot; target=&quot;_blank&quot;&gt;监控平台前端SDK开发实践&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;如何打造一套自己的前端监控系统？文章大而全地描述了前端监控系统的设计及实践，覆盖了用户行为，资源加载，接口调用，运行时报错等功能。&lt;/p&gt;

&lt;h4 id=&quot;使用-f12-开发人员工具调试-javascript-错误&quot;&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/gg699336(v=vs.85).aspx&quot; target=&quot;_blank&quot;&gt;使用 F12 开发人员工具调试 JavaScript 错误&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;使用 F12 工具，Web 开发人员能够在无需离开浏览器的情况下快速调试 JavaScript 代码。 通过内置到每个 Windows Internet Explorer 9 安装中，F12 工具可提供一些调试工具（例如，断点、监视和局部变量查看）以及一个用于消息和即时代码执行的控制台。&lt;/p&gt;

&lt;h4 id=&quot;javascript-event-loop-机制详解与-vuejs-中实践应用&quot;&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29116364&quot; target=&quot;_blank&quot;&gt;JavaScript Event Loop 机制详解与 Vue.js 中实践应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文介绍了JavaScript Event Loop 机制， 依次对函数调用栈、MacroTask 与 MicroTask 执行顺序作了详细解释，对 Vue.js 中 nextTick 实现也做了简单介绍。&lt;/p&gt;

&lt;h2 id=&quot;技术纵横&quot;&gt;技术纵横&lt;/h2&gt;

&lt;h4 id=&quot;yes-that-web-project-should-be-a-pwa&quot;&gt;&lt;a href=&quot;https://alistapart.com/article/yes-that-web-project-should-be-a-pwa&quot; target=&quot;_blank&quot;&gt;Yes, That Web Project Should Be a PWA&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;关于 PWA 可能大部分人都存在很多误解，这篇文章纠正了关于这些误解，并详细说明使用 PWA 带来的好处，是的，大部分站点都应该是 PWA。&lt;/p&gt;

&lt;h4 id=&quot;代码质量管控的四个阶段&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59af8704f265da24715829ce?utm_source=gold_browser_extension&quot; target=&quot;_blank&quot;&gt;代码质量管控的四个阶段&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;对于软件项目来说，代码质量代表着系统的有序程度，烂代码增加就是系统无序性上升的体现。在团队不断扩展，业务压力上涨的同时如何更好的管理和掌控代码质量?&lt;/p&gt;

&lt;h4 id=&quot;浅谈多浏览器的自动化测试&quot;&gt;&lt;a href=&quot;http://www.freebuf.com/articles/others-articles/145586.html&quot; target=&quot;_blank&quot;&gt;浅谈多浏览器的自动化测试&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;要是碰到前端工程师朋友，那聊聊浏览器的兼容性准是没错，这和碰到英国朋友就谈天气是一个道理。&lt;/p&gt;

&lt;h4 id=&quot;再谈ie浏览器兼容问题&quot;&gt;&lt;a href=&quot;http://jartto.wang/2016/12/06/talk-about-ie-compatible-over-again/&quot; target=&quot;_blank&quot;&gt;再谈ie浏览器兼容问题&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;随着技术日新月异的发展，我以为已经可以完全甩掉ie浏览器，驰骋在新技术的海洋里。却不想，ie兼容问题如影随行。&lt;/p&gt;

&lt;h2 id=&quot;实用推荐&quot;&gt;实用推荐&lt;/h2&gt;

&lt;h4 id=&quot;动画工具tool&quot;&gt;&lt;a href=&quot;http://isux.tencent.com/css3/tools.html&quot; target=&quot;_blank&quot;&gt;动画工具[Tool]&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;CSS3动画制作工具， 可以图形化的制作动画效果，然后生成对应css 代码。&lt;/p&gt;

&lt;h4 id=&quot;asmjs-和-emscripten-入门教程&quot;&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2017/09/asmjs_emscripten.html&quot; target=&quot;_blank&quot;&gt;asm.js 和 Emscripten 入门教程&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文介绍了 asm.js 和 Emscripten 的基本用法，讲解了如何将 C / C++ 转成 JS ， 如何生成能让浏览器运行 3D 游戏，还可以运行各种服务器软件，比如 Lua、Ruby 和 SQLite的变体 JS。&lt;/p&gt;

&lt;h4 id=&quot;ie-javascript进阶调试&quot;&gt;&lt;a href=&quot;http://www.browserwork.com/debugging/ie-debug&quot; target=&quot;_blank&quot;&gt;IE JavaScript进阶调试&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;大多数人用IE都知道IE有个F12 开发者工具可以用来调试网页的各种问题，本文以IE10为例，尽量少谈基础，只说说IE脚本调试中的进阶技巧。如果网页脚本在IE上运行出现问题，希望下面的技巧可以省点时间。&lt;/p&gt;

&lt;h4 id=&quot;muber-高性能-web-app-优化实践&quot;&gt;&lt;a href=&quot;http://zhangbinliu.me/2017-07-10-m-uber-performance-optimazation/&quot; target=&quot;_blank&quot;&gt;m.uber 高性能 Web App 优化实践&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;又一篇关于性能优化的实践。m.uber 团队对 m.uber，他们的超级轻量 web app 做了一些性能优化的工作。范围全面，从代码到打包到部署到缓存，都有涉及。&lt;/p&gt;

&lt;h2 id=&quot;程序人生&quot;&gt;程序人生&lt;/h2&gt;

&lt;h4 id=&quot;如何成为一个合格的技术-leader&quot;&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/how-to-become-a-qualified-technology-for-leader&quot; target=&quot;_blank&quot;&gt;如何成为一个合格的技术 Leader&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;一名女性技术人的成长感悟与对技术人转向管理者的思考。&lt;/p&gt;

&lt;h4 id=&quot;程序员如何成为自由职业者&quot;&gt;&lt;a href=&quot;http://www.jianshu.com/p/a4f06e05dfa4&quot; target=&quot;_blank&quot;&gt;程序员如何成为自由职业者？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;作为一名开发者，该如何走向自由职业呢？
这正是这篇文章要讨论的问题，首先介绍开发者走向自由职业的 4 种常见方式，然后聊聊开始自由职业钱必做的 5 种准备，最后，还会分享一下作者的 2 点深切体会。&lt;/p&gt;

&lt;h4 id=&quot;中国首位00后ceo公然抄袭复制我的开源作品&quot;&gt;&lt;a href=&quot;https://juejin.im/post/59ad758a518825243d1f28cb&quot; target=&quot;_blank&quot;&gt;中国首位00后CEO公然抄袭、复制我的开源作品&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;划重点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;最近一个 00 后 CEO 很火啊，雷军都转发微博说长江后浪推前浪之类&lt;/li&gt;
  &lt;li&gt;然而，这两天有一位开源作者指出该公司产品 “猫桌面”，抄袭自己在GitHub开源社区发布的一款智能电视桌面 &lt;a href=&quot;https://github.com/JackyAndroid/AndroidTVLauncher&quot; target=&quot;_blank&quot;&gt;JackyAndroid/AndroidTVLauncher&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;作者虽然已经改了 License (从 Apache 到 GNU GPL v3.0)，但是应该也没什么用了 &lt;a href=&quot;https://github.com/JackyAndroid/AndroidTVLauncher/commit/47c1a7cf63229dfdee51c5cbb6ec2eee7324a1fd&quot; target=&quot;_blank&quot;&gt;(看 commit history 感觉作者已经气的吐血)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Apache Licence 允许代码修改，再发布（作为开源或商业软件）&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;我说两句：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;作者早先用 Apache 这种宽松协议应该也是方便推广自己的东西，在 Apache 协议的条件下，原作者说该公司抄袭，有点过了。&lt;/li&gt;
  &lt;li&gt;但我站在原作的角度上，有公司使用了自己开源代码，没有问题。产品名称、用户界面都不变， ms 也还好。但再想一下：自己的东西被人拿去用，自己未被告知，而且媒体宣传成某某和自己不相关的公司的产品。哎。。。心酸。。。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;让console充满情怀&quot;&gt;&lt;a href=&quot;https://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/?o2src=juejin&amp;amp;o2layout=compat&quot; target=&quot;_blank&quot;&gt;让console充满情怀&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;一般情况下只是用console 控制台输出简单的文字信息，但是当console遇到了前端的情怀，故事就不是这么发展的了~&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ELSE 技术周刊由 &lt;a href=&quot;https://github.com/CtripFE&quot; target=&quot;_blank&quot;&gt;IFT 小组&lt;/a&gt; 出品，汇聚一周好文章， &lt;a href=&quot;https://zhuanlan.zhihu.com/p/29229496&quot; target=&quot;_blank&quot;&gt;周刊原文&lt;/a&gt;。本期编辑：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CurtisCBS&quot; target=&quot;_blank&quot;&gt;@Curtis&lt;/a&gt; 前端中年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/stoneyong&quot; target=&quot;_blank&quot;&gt;@StoneZou&lt;/a&gt; 前端搬砖工，不安分于前端开发的搬砖工&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/StevenX911&quot; target=&quot;_blank&quot;&gt;@Steven&lt;/a&gt; 写 JS 的老年人&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/sturloly&quot; target=&quot;_blank&quot;&gt;@sturloly&lt;/a&gt; building apps for my future starship&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/mirreal&quot; target=&quot;_blank&quot;&gt;@mirreal&lt;/a&gt; 一个程序圈的间谍&lt;/p&gt;

  &lt;p&gt;感谢以下同学荐稿：&lt;a href=&quot;https://github.com/elevenbeans&quot; target=&quot;_blank&quot;&gt;elevenbeans&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/CtripFE/fe-weekly/issues&quot; target=&quot;_blank&quot;&gt;点击这里&lt;/a&gt; 向我们推荐你读到的好文章。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 11 Sep 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//weekly/2017/09/11/weekly.html</link>
        <guid isPermaLink="true">http://else.vip//weekly/2017/09/11/weekly.html</guid>
        
        
        <category>weekly</category>
        
      </item>
    
      <item>
        <title>.NET 应用 转 Node.js</title>
        <description>&lt;h2 id=&quot;为什么选用-nodejs&quot;&gt;为什么选用 NodeJS&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;统一前后端的渲染层语言
    &lt;ul&gt;
      &lt;li&gt;前后端掌管 View 渲染的语言统一为 JavaScript&lt;/li&gt;
      &lt;li&gt;直接用JS替换掉&lt;code class=&quot;highlighter-rouge&quot;&gt;.NET&lt;/code&gt;,无需再使用Java开发页面&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;更彻底地实现依赖解耦，100% 的前后端分离
    &lt;ul&gt;
      &lt;li&gt;原服务端开发，可以完全专注于数据层的处理(Data Provider)&lt;/li&gt;
      &lt;li&gt;前端开发可以用 node.js 做服务端渲染，自主完成所有页面的页面逻辑&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;提升开发效率，更灵活地复用代码，减少冗余开发成本
    &lt;ul&gt;
      &lt;li&gt;实现某个功能的代码，只需要写一次&lt;/li&gt;
      &lt;li&gt;实现某个功能的代码，只需要写一次&lt;/li&gt;
      &lt;li&gt;减少冗余代码，降低开发成本&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nodejs-实现前后端分离&quot;&gt;Node.js 实现前后端分离&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/NodeJS-f-b.png&quot; alt=&quot;Node.js 实现前后端分离&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nodejs-带来的改进&quot;&gt;Node.js 带来的改进&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;减少部署次数和机器数量
    &lt;ul&gt;
      &lt;li&gt;.Net 渲染需要部署 SEO 和 非 SEO 两次&lt;/li&gt;
      &lt;li&gt;两个部署路径: /html 和 /webapp&lt;/li&gt;
      &lt;li&gt;Node.js 只需部署一次: /webapp&lt;/li&gt;
      &lt;li&gt;用 Node.js 同时支持前后端渲染&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;有效提升了前端工程师的整体技术水平
    &lt;ul&gt;
      &lt;li&gt;从纯前端开发，到可独立完成 server 端页面开发&lt;/li&gt;
      &lt;li&gt;从依赖后端提供 mock 数据，到使用 Node.js 自主建立 mock 服务&lt;/li&gt;
      &lt;li&gt;从更全面视角去开发一个前端应用，加深对业务的理解及实现&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;显著提高了开发效率
    &lt;ul&gt;
      &lt;li&gt;提升约1/3的开发效率,10人团队减少到7人&lt;/li&gt;
      &lt;li&gt;无需额外沟通,开发周期平均减少20%&lt;/li&gt;
      &lt;li&gt;Node.js + React 的技术栈利于招聘年轻而又优秀的前端工程师&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基于nodejs的应用技术方案&quot;&gt;基于Node.js的应用技术方案&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;前后端渲染代码共享，依赖分离&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/NodeJS-frame.png&quot; alt=&quot;技术方案&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;只维护一份代码，只部署一次&lt;/li&gt;
  &lt;li&gt;首次加载，代码在 node.js 里做服务端渲染&lt;/li&gt;
  &lt;li&gt;初始化后，代码在 browser 里做浏览器端渲染&lt;/li&gt;
  &lt;li&gt;对 SEO 友好，快速的首屏渲染&lt;/li&gt;
  &lt;li&gt;服务器请求数降低&lt;/li&gt;
  &lt;li&gt;交互体验媲美原生 APP&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nodejs-在ibu的实践&quot;&gt;Node.js 在IBU的实践&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;IBU H5 Train&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;首屏加载时间变短（1.78s -&amp;gt; 1.47s）&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2017-09-13_104557.png&quot; alt=&quot;新版&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2017-09-13_104650.png&quot; alt=&quot;旧版&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;转场白屏时间变短&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2017-09-13_105147.png&quot; alt=&quot;新版&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2017-09-13_105506.png&quot; alt=&quot;旧版&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;进入支付页时间变短，且支付页为移动支付&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2017-09-13_144245.png&quot; alt=&quot;新版&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2017-09-13_142646.png&quot; alt=&quot;旧版&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 08 Sep 2017 18:00:00 +0800</pubDate>
        <link>http://else.vip//team/2017/09/08/team.html</link>
        <guid isPermaLink="true">http://else.vip//team/2017/09/08/team.html</guid>
        
        
        <category>team</category>
        
      </item>
    
  </channel>
</rss>
